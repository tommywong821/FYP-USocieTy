# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  pull_request:
    branches: [ "master" ]

jobs:
  test:
    name: SpringBoot CI Test
    runs-on: ubuntu-latest

    steps:    
    # Clone the repository
    - name: Checkout
      uses: actions/checkout@v3
    
    # Create dummy test properties file
    - name: Write value to Properties-file
      run: |
        cd src/main/resources
        touch application.properties
        echo "spring.h2.console.enabled=true\n" >> application.properties
        echo "spring.h2.console.path=/h2-console" >> application.properties
        echo "spring.datasource.url=jdbc:h2:mem:test;DB_CLOSE_DELAY=-1" >> application.properties
        echo "spring.datasource.username=test" >> application.properties
        echo "spring.datasource.password=Test1234" >> application.properties
        echo "heroku.frontend.url=heroku.frontend.url" >> application.properties
        echo "heroku.backend.url=heroku.backend.url" >> application.properties
        echo "cors.originPatterns=cors.originPatterns" >> application.properties
        echo "itsc.tenantId=ITSC_TENANT_ID" >> application.properties
        echo "itsc.clientId=ITSC_CLIENT_ID" >> application.properties
        echo "itsc.clientSecret=ITSC_CLIENT_SECRET" >> application.properties
        cd ../../..
    
    # Run gradle test
    - name: Run gradle test
      run: |
        cat src/main/resources/application.properties
        chmod +x gradlew
        ./gradlew test
