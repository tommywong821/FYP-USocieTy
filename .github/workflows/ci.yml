# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  pull_request:
    branches: [ "master" ]

jobs:
  test:
    name: SpringBoot CI Test
    runs-on: ubuntu-latest

    steps:    
    # Clone the repository
    - name: Checkout
      uses: actions/checkout@v3
    
    # Create dummy test properties file
    - name: Write value to Properties-file
      uses: christian-draeger/write-properties@1.1.0
      with:
        path: './src/main/resources/application.properties'
        property: |
          'spring.h2.console.enabled'
          'spring.h2.console.path'
          'spring.datasource.url'
          'spring.datasource.username'
          'spring.datasource.password'
          'heroku.frontend.url'
          'heroku.backend.url'
          'cors.originPatterns'
          'itsc.tenantId'
          'itsc.clientId'
          'itsc.clientSecret'
        value: |
          'true'
          '/h2-console'
          'jdbc:h2:mem:test;DB_CLOSE_DELAY=-1'
          'test'
          'Test1234'
          'heroku.frontend.url'
          'heroku.backend.url'
          'cors.originPatterns'
          'ITSC_TENANT_ID'
          'ITSC_CLIENT_ID'
          'ITSC_CLIENT_SECRET'
    
    # Run gradle test
    - name: Run gradle test
      run: |
        chmod +x gradlew
        ./gradlew test
